// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt         DateTime  @default(now()) @map("createdAt")
  updatedAt         DateTime  @updatedAt @map("updatedAt")
  email             String    @unique
  hash              String
  firstName         String?
  lastName          String?
  role              String    @default("USER")
  isActive          Boolean   @default(true)
  products          Product[]
  resetToken        String?
  resetTokenExpires DateTime?
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now()) @map("createdAt")
  updatedAt   DateTime  @updatedAt @map("updatedAt")
  title       String
  description String?
  price       Int // Usando centavos
  link        String
  imageUrl    String?
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?   @db.ObjectId
  tags        String[]
  isAvailable Boolean   @default(true)
  userId      String    @db.ObjectId // Deve ser do mesmo tipo que User.id
  user        User      @relation(fields: [userId], references: [id]) // ReferÃªncia direta ao campo

  @@index([title])
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  imageUrl  String? // Novo campo adicionado
  products  Product[]
  createdAt DateTime  @default(now()) @map("createdAt")
  updatedAt DateTime  @updatedAt @map("updatedAt")
}
